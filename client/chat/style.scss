// некоторые переменные
// поскольку это константы, их можно использовать как переменные scss
$header-bg: #2A3D51;
$header-fg: #FFF;

// а это мы будем изменять в дальнейшем, поэтому используем css
:root {
  --avatar-border-width: 2px;
  --avatar-border-color: var(--bs-border-color);
}

html, body { height: 100%; }
body {
  display: flex;
  flex-direction: column;
}
h1, h2, h3, h4, h5, h6 {
  font-weight: bold;
}
.avatar {
  border-radius: 100%;
  border: var(--avatar-border-width) var(--avatar-border-color) solid;
}
.btn.btn-icon {
  line-height: 1;

  svg {
    vertical-align: -.1em;
  }
}
.btn-group {
  --bs-border-radius: 0;
}

.navbar {
  background: $header-bg;
  color: $header-fg;
  margin-block-end: 1rem;
  padding: .5rem 1rem;

  &-brand {
    color: inherit;
    padding: 0;

    &:hover {
      color: color-mix(in srgb, $header-fg 80%, #000);
    }
  }
  &-avatar img {
    --avatar-border-color: #000;
  }
}
main.container-fluid {
  flex: 1;
  min-height: 0;
  display: grid;
  grid-template-columns: 1fr 2fr;
  padding: 0 1rem 1rem;
  max-height: 100%;

  section {
    display: flex;
    flex-direction: column;
    border: 1px var(--bs-border-color) solid;
    max-height: 100%;
    overflow: auto;
  }
}

.panel {
  border-inline-end: none;

  &-tools .btn {
    padding-block: .75rem;
  }
}

.channels {
  flex: 1;
  overflow: auto;
}
.channel {
  display: flex;
  gap: .35rem;
  transition: background-color .2s linear;
  cursor: pointer;
  user-select: none;
  padding: .25rem;
  border-block-end: 1px var(--bs-border-color) solid;

  &:hover, &.selected {
    background-color: rgba(var(--bs-primary-rgb), .1);
    .avatar {
      --avatar-border-color: var(--bs-primary);
    }
  }

  > div {
    display: flex;
    flex-direction: column;
  }
  &-left:first-child {
    align-items: center;
    gap: .15rem;
  }

  .avatar {
    --avatar-border-width: 3px;
    --avatar-border-color: var(--bs-border-color);
    transition: border-color .2s linear;
  }
  time {
    font-size: .8em;
  }
  .title, .last-author, .last-msg { // схлопываем длинный текст в многоточие
    --clamp-count: 2;
    display: -webkit-box;
    line-clamp: var(--clamp-count);
    -webkit-line-clamp: var(--clamp-count);
    -webkit-box-orient: vertical;
    text-overflow: ellipsis;
    overflow: hidden;
  }
  .title {
    line-height: 1.05;
  }
  .last-author {
    --clamp-count: 1;
    font-size: .8em;
    line-height: 1;
    margin-block-start: .4em;
  }
  .last-msg {
    font-size: .7em;
    line-height: 1.2;
  }

  > .badge {
    margin: auto 0 auto auto;
  }
}

.contents {
  position: relative;

  .drop-here { // оверлей для drag&drop
    $border-gap: .75rem;
    position: absolute;
    inset: 0;
    z-index: 3;
    background: var(--bs-body-bg);
    text-align: center;
    border: 4px var(--bs-border-color) dashed;
    padding: $border-gap;
    margin: $border-gap;
    outline: $border-gap var(--bs-body-bg) solid;
    display: none;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 2rem;

    &__text {
      font-weight: bold;
      margin: 0;
    }
  }

  &.dropping .drop-here {
    display: flex;
  }
  &.dropping * {
    pointer-events: none;
    user-select: none;
  }

  .badge, .spinner {
    margin: auto;
  }

  button {
    border-radius: 0;
  }

  &-header {
    display: flex;
    align-items: center;
    gap: .25rem;
    border-block-end: 1px var(--bs-border-color) solid;
    padding-inline-start: .25rem;

    .avatar {
      margin-block: .25rem;
    }
    > .dropdown {
      margin-inline-start: auto;
      align-self: stretch;
    }
  }
  &-manage, &-input {
    button svg {
      width: 20px;
      height: 20px;
    }
  }
  &-main {
    // оверфлоу и флекс лучше не объединять
    // хз, как сейчас работает скролл, но он работает
    flex: 1;
    overflow: auto;

    .messages-wrapper {
      display: flex;
      flex-direction: column;
      justify-content: flex-end;
      min-height: 100%;
    }
  }
  &-input {
    margin: .25rem 0 0 0;
    textarea {
      resize: none;
      line-height: 1.25;
    }
    button {
      padding: 0 .5rem;
    }
  }
}

.message {
  $manage-delay: .25s;
  $manage-duration: .35s;

  border-block-start: 1px var(--bs-border-color) solid;
  padding: .25rem .25rem 0;
  margin-block-start: .25rem;

  &.pending {
    opacity: .25;
    animation: pending-pulse 5s linear infinite normal;
  }
  &.editing {
    background: rgba(var(--bs-warning-rgb), .1);
  }

  // самое важное здесь - транзишны
  // пока меню скрыто, нужна задержка,
  // которая убирается в открытом состоянии
  &-manage {
    float: inline-end;
    opacity: 0;
    visibility: hidden;
    transition: opacity $manage-duration, visibility 0s $manage-duration;
  }
  &:hover &-manage {
    opacity: 1;
    visibility: visible;
    transition: opacity $manage-duration $manage-delay;
  }

  &.edited &-head:after { // метка измененного сообщения
    content: '(изм.)';
    font-style: italic;
    font-size: .7em;
    opacity: .6;
  }
  time {
    font-size: .7em;
    opacity: .6;
  }

  &-text p:last-child {
    margin: 0;
  }
}

.user-group {
  cursor: help;

  svg {
    width: 1em;
    fill: currentColor;
  }
}

#modal-members .modal-body {
  display: flex;
  flex-direction: column;
}
.member {
  border-block-end: 1px var(--bs-border-color) solid;
  padding: 0 0 .25rem;
  margin-block-end: .25rem;

  &:last-child {
    border: none;
    padding: 0;
    margin: 0;
  }
}

#mnc-users {
  display: flex;
  flex-wrap: wrap;
  gap: .25rem .5rem;
}
.suggested-user {
  --duration: .2s;
  border-radius: 24px;
  transition: background-color var(--duration), color var(--duration);
  padding: 0 .5rem 0 0;
  cursor: pointer;

  &:hover {
    background-color: rgba(var(--bs-primary-rgb), .2);
  }

  .user-avatar-wrp {
    position: relative;

    &::before {
      --total: 24px;
      --size: 20px;
      content: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/%3e%3c/svg%3e");
      display: block;
      width: var(--size); height: var(--size);
      border-radius: 100%;
      position: absolute;
      left: 2px; top: -1px;
      background-color: var(--bs-primary);
      padding: calc((var(--total) - var(--size)) / 2);
      box-sizing: content-box;
      opacity: 0;
      transition: opacity var(--duration);
      pointer-events: none;
    }
  }
  input {
    display: none;
  }
  &:has(input:checked) {
    background-color: var(--bs-primary);
    color: var(--bs-white);

    .user-avatar-wrp {
      &::before {
        opacity: 1;
      }
      .avatar {
        border-color: var(--bs-primary-border-subtle);
      }
    }
  }
}

.dropdown.no-arrow .dropdown-toggle:after {
  display: none;
}

.emoji-popover .popover-body {
  padding: 0;
}

.form-label:has(+ :required):after {
  content: '*';
  display: inline-block;
  color: var(--bs-red);
  vertical-align: text-top;
  line-height: 1;
  margin-inline-start: .15em;
}

.hidden {
  display: none;
}

// анимация отправляющегося сообщения:
// кольцевая пульсация прозрачности от 90% до 30%
@keyframes pending-pulse {
  0% { opacity: .3; }
  50% { opacity: .9; }
  100% { opacity: .3; }
}
